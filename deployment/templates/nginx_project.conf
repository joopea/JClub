# http://nginxlibrary.com/ip-based-country-blocking/
geoip_country /usr/share/GeoIP/GeoIP.dat;
map $geoip_country_code $allow_visit {
    default yes;
    IR no;
}

server {
    listen 80;
    server_name {{ hostname }};
    try_files $uri @django;


    set_real_ip_from {{ network_subnet }};
    real_ip_header    X-Forwarded-For;

    access_log /var/log/nginx/{{ project_env }}.access.log main;
    error_log /var/log/nginx/{{ project_env }}.error.log;

    error_page 403 {{ static_path }}/403.html;

    # disable_symlinks if_not_owner from={{ base_path }};

    # Munin nginx_upstream_multi_ config
    # See https://github.com/iborodikhin/munin-plugin-nginx-upstream-multi/
    log_format {{ project_env }}_upstream "ua=[{{ project_env }}] ut=[$upstream_response_time] us=[$upstream_status] cs=[$upstream_cache_status]";

    location /favicon.ico {
        alias {{ static_path }}/core/images/favicon.ico;
        expires epoch;
    }

    location /static/ {
        alias {{ static_path }};
        expires max;
    }

    location /media/ {
        alias {{ media_path }};
        expires max;
    }

    location @django {
        {% if nginx_use_htpasswd %}
        satisfy any;

        {% for addr, comment in nginx_allowed_ips.iteritems() %}
        allow {{ addr }}; # {{ comment }}
        {% endfor %}

        deny all;

        auth_basic "{{ project_name }} {{ platform }}";
        auth_basic_user_file {{ release_path }}htpasswd;
        {% endif %}

        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_pass http://unix:{{ wsgi_socket }};

        # Upstream log for munin nginx_upstream plugin, needs to come before main log
        access_log /var/log/nginx/upstream.log {{ project_env }}_upstream;

        access_log /var/log/nginx/{{ project_env }}.wsgi.access.log main;
    }
}

server {
    listen 80;
    server_name {{ hostname_media }};

    set_real_ip_from {{ network_subnet }};
    real_ip_header    X-Forwarded-For;

    access_log /var/log/nginx/{{ project_env }}.access.log main;
    error_log /var/log/nginx/{{ project_env }}.error.log;

    # disable_symlinks if_not_owner from={{ base_path }};

    # Munin nginx_upstream_multi_ config
    # See https://github.com/iborodikhin/munin-plugin-nginx-upstream-multi/
    log_format varnish_{{ project_env }}_upstream "ua=[{{ project_env }}] ut=[$upstream_response_time] us=[$upstream_status] cs=[$upstream_cache_status]";

    location / {
        {% if nginx_use_htpasswd %}
        satisfy any;

        {% for addr, comment in nginx_allowed_ips.iteritems() %}
        allow {{ addr }}; # {{ comment }}
        {% endfor %}

        deny all;

        auth_basic "{{ project_name }} {{ platform }}";
        auth_basic_user_file {{ release_path }}htpasswd;
        {% endif %}

        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    
        proxy_pass http://localhost:6081;

        # Upstream log for munin nginx_upstream plugin, needs to come before main log
        access_log /var/log/nginx/upstream.log {{ project_env }}_upstream;

        access_log /var/log/nginx/{{ project_env }}.wsgi.access.log main;
    }
}

server {
    listen 80;
    server_name {{ hostname_shorturl }};
    try_files $uri @django;


    set_real_ip_from {{ network_subnet }};
    real_ip_header    X-Forwarded-For;

    access_log /var/log/nginx/{{ project_env }}.access.log main;
    error_log /var/log/nginx/{{ project_env }}.error.log;

    error_page 403 {{ static_path }}/403.html;

    # disable_symlinks if_not_owner from={{ base_path }};

    # Munin nginx_upstream_multi_ config
    # See https://github.com/iborodikhin/munin-plugin-nginx-upstream-multi/

    location @django {
        {% if nginx_use_htpasswd %}
        satisfy any;

        {% for addr, comment in nginx_allowed_ips.iteritems() %}
        allow {{ addr }}; # {{ comment }}
        {% endfor %}

        deny all;

        auth_basic "{{ project_name }} {{ platform }}";
        auth_basic_user_file {{ release_path }}htpasswd;
        {% endif %}

        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_pass http://unix:{{ wsgi_socket_shorturl }};

        # Upstream log for munin nginx_upstream plugin, needs to come before main log
        access_log /var/log/nginx/upstream.log {{ project_env }}_upstream;

        access_log /var/log/nginx/{{ project_env }}.wsgi.access.log main;
    }
}

server {
    listen 80;
    server_name {{ hostname_admin }};
    try_files $uri @django;


    set_real_ip_from {{ network_subnet }};
    real_ip_header    X-Forwarded-For;

    access_log /var/log/nginx/{{ project_env }}.access.log main;
    error_log /var/log/nginx/{{ project_env }}.error.log;

    error_page 403 {{ static_path }}/403.html;

    # disable_symlinks if_not_owner from={{ base_path }};

    # Munin nginx_upstream_multi_ config
    # See https://github.com/iborodikhin/munin-plugin-nginx-upstream-multi/

    location /favicon.ico {
        alias {{ static_path }}/core/images/favicon.ico;
        expires epoch;
    }

    location /static/ {
        alias {{ static_path }};
        expires max;
    }

    location /media/ {
        alias {{ media_path }};
        expires max;
    }

    location @django {
        {% if nginx_use_htpasswd %}
        satisfy any;

        {% for addr, comment in nginx_allowed_ips.iteritems() %}
        allow {{ addr }}; # {{ comment }}
        {% endfor %}

        deny all;

        auth_basic "{{ project_name }} {{ platform }}";
        auth_basic_user_file {{ release_path }}htpasswd;
        {% endif %}

        # Deny for IR ip-addresses
        if ($allow_visit = no) {
            return 403;
        }

        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    
        proxy_pass http://unix:{{ wsgi_socket_admin }};

        # Upstream log for munin nginx_upstream plugin, needs to come before main log
        access_log /var/log/nginx/upstream.log {{ project_env }}_upstream;

        access_log /var/log/nginx/{{ project_env }}.wsgi.access.log main;
    }
}
